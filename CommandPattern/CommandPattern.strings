/* 
  CommandPattern.strings
  DesignPatterns

  Created by 刘永杰 on 2019/2/25.
  Copyright © 2019 刘永杰. All rights reserved.
 
 命令模式 -- 行为型模式
 
 封装调用
 
 命令模式：将“请求”封装成对象，以便使用不同的请求、队列或者日志来参数化其他对象。命令模式也支持可撤销的操作
 
 当需要将发出请求的对象和执行请求的对象解耦的时候，使用命令模式
 
 参与者
 
 Client: 这个客户负责创建一个ConcreteCommand，并设置接收者
 Invoker：这个调用者持有一个命令对象，并在某个时间点调用命令对象的execute方法，将请求付诸实行
 Receiver：接收者知道如何进行必要的工作，实现这个请求。任何类都可以当接收者
 Command：Command为所有命令声明了一个接口。调用命令对象的execute方法，就可以让接收者进行相关的动作。这个接口也具备一个undo方法。
 ConcreteCommand：定义了动作和接收者之间的绑定关系。调用者只要调用execute就可以发出请求，然后由ConcreteCommand调用接收者的一个或多个方法
 
 命令模式的更多用途：
 1. 队列请求
    实现命令接口的对象被放进队列，线程从队列中一个个地删除命令对象，然后调用对象的execute方法。一旦完成，就会再去处理下一个新的命令对象。
 2. 日志请求
    死机和恢复
    命令接口里面加入两个新方法，用于记录日志。
    当每个命令被执行时，会被存储在磁盘中。
    死机恢复时，这些命令会被重新加载，并以正确的次序执行
 
*/
