/* 
  TemplateMethodPattern.strings
  DesignPatterns

  Created by 刘永杰 on 2019/3/24.
  Copyright © 2019 刘永杰. All rights reserved.
 
 模板方法模式 - 行为型模式
 
 模板方法模式的定义：在一个方法中定义一个算法的骨架，而将一些步骤延迟到子类中。模板方法使得子类可以在不改变算法结构的情况下，重新定义算法中的某些步骤。
 
 模板类：这个抽象的类包含了模板方法。模板方法在实现算法的过程中，用到了其他原语操作。模板方法本身和这两个操作的具体实现之间被解耦了。
 具体类：可能有许多具体类，每一个都实现了模板方法所需要的全部操作。这个具体类实现抽象的操作，当模板方法需要这两个抽象方法时，会调用它们
 
 模板方法中有一个钩子的概念。
 钩子是一种被声明在抽象类中的方法，但只有空的或者默认的实现。钩子的存在，可以让子类有能力对算法的不同点进行挂钩。要不要挂钩，由子类自行决定。
 
 具体的使用场景：
 
 NSMutableArray *array = [NSMutableArray array];
 [array sortUsingComparator:^NSComparisonResult(id  _Nonnull obj1, id  _Nonnull obj2) {
       return obj1 > obj2;
 }];
 
 系统的排序方法就算是一种钩子的使用，让用户选择怎么来排序，升序或降序，但是具体的实现你不用管。
 
 优点：可以为我们提供一种代码复用的技巧，多用于框架的搭建，控制算法
 缺点：但是会有一定的依赖，因为使用的是继承的方式
 
*/
